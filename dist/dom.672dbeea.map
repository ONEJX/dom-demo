{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","child","appendChild","wrap","remove","removeChild","empty","childNodes","arr","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelector","findAll","querySelectorAll","children","nodeList","i","nodeType","siblings","Array","from","filter","n","next","x","previous","previousSibling","each","call","index","list"],"mappings":"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","file":"dom.672dbeea.map","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n    //新增节点\r\n    create(string){\r\n        const container = document.createElement('template')\r\n        container.innerHTML = string\r\n        return container.content.firstChild //只能用这种方法返回元素\r\n    },\r\n    //新增弟弟\r\n    after(node,node2){\r\n        node.parentNode.insertBefore(node2,node.nextSibling)//把node2插到node的下一个节点(是一个文本)的前面\r\n    },\r\n    //新增哥哥\r\n    before(node,node2){\r\n        node.parentNode.insertBefore(node2,node)\r\n    },\r\n    //新增儿子\r\n    append(parent,child){\r\n        parent.appendChild(child)\r\n    },\r\n    //新增爸爸\r\n    wrap(parent,child){\r\n        dom.before(child,parent)\r\n        dom.append(parent,child)\r\n    },\r\n    //删除节点\r\n    remove(node){\r\n        node.parentNode.removeChild(node)\r\n        return node\r\n    },\r\n    //删除所有子节点\r\n    empty(node){\r\n        const {childNodes} = node\r\n        const arr = []\r\n        let firstChild= node.firstChild   \r\n        while(firstChild){\r\n            arr.push(dom.remove(firstChild))\r\n            firstChild = node.firstChild\r\n        }\r\n        return arr\r\n    },\r\n    //读写属性\r\n    attr(node,name,value){\r\n        if(arguments.length === 3){\r\n            node.setAttribute(name,value)\r\n        }else if(arguments.length === 2){\r\n           return node.getAttribute(name)\r\n        }\r\n    },\r\n    //读写文本\r\n    text(node,string){\r\n        if('innerText' in node){\r\n            if(arguments.length === 2){\r\n                node.innerText = string\r\n            }else if(arguments.length === 1){\r\n                return node.innerText\r\n            }\r\n        }else{\r\n            if(arguments.length === 2){\r\n                node.textContent = string\r\n            }else if(arguments.length === 1){\r\n                 return node.textContent\r\n            }\r\n        }\r\n    },\r\n    //读写HTML内容\r\n    html(node,string){\r\n        if(arguments.length === 2){\r\n            node.innerHTML = string\r\n        }else if(arguments === 1){\r\n            return node.innerHTML\r\n        }\r\n    },\r\n    //读写style内容\r\n    style(node,name,value){\r\n        if(arguments.length === 3){\r\n            node.style[name] = value\r\n        }else if(arguments.length === 2){\r\n            if(name instanceof Object){\r\n                for(let key in name){\r\n                    node.style[key] = name[key]\r\n                }\r\n            }else if(typeof name === 'string'){\r\n                return node.style[name] \r\n            }\r\n        }\r\n    },\r\n    class:{\r\n        //添加className\r\n        add(node,className){\r\n            node.classList.add(className)\r\n        },\r\n        //删除className\r\n        remove(node,className){\r\n            node.classList.remove(className)\r\n        },\r\n        //检查是否拥有className\r\n        has(node,className){\r\n            return node.classList.contains(className)\r\n        }\r\n    },\r\n    //添加事件\r\n    on(node,eventName,fn){\r\n        node.addEventListener(eventName,fn)\r\n    },\r\n    //删除事件\r\n    off(node,eventName,fn){\r\n        node.removeEventListener(eventName,fn)\r\n    },\r\n    //查寻单个元素\r\n    find(selector,scope){\r\n        return (scope || document).querySelector(selector)\r\n    },\r\n    //查寻多个元素\r\n    findAll(selector,scope){\r\n        return (scope || document).querySelectorAll(selector)\r\n    },\r\n    //查寻父元素\r\n    parent(node){\r\n        return node.parentNode\r\n    },\r\n    //查寻子元素\r\n    children(node){\r\n        const nodeList = node.childNodes\r\n        const arr = []\r\n        for(let i=0;i<nodeList.length;i++){\r\n            if(nodeList[i].nodeType === 3){\r\n                continue;\r\n            }else{\r\n                arr.push(nodeList[i])\r\n            }\r\n        }\r\n        return arr\r\n    },\r\n    //查寻所有兄弟元素\r\n    siblings(node){\r\n       return Array.from(node.parentNode.children).filter(n => n!==node)\r\n    },\r\n    //查寻下一个元素\r\n    next(node){\r\n        let x = node.nextSibling\r\n        while(x && x.nodeType === 3){\r\n            x = x.nextSibling\r\n        }\r\n        return x\r\n    },\r\n    //查寻上一个元素\r\n    previous(node){\r\n        let x = node.previousSibling\r\n        while(x && x.nodeType === 3){\r\n            x = x.previousSibling\r\n        }\r\n        return x\r\n    },\r\n    //遍历所有元素\r\n    each(nodeList,fn){\r\n        for(let i=0;i<nodeList.length;i++){\r\n            fn.call(null,nodeList[i])\r\n        }\r\n    },\r\n    //查寻自己是第几个元素\r\n    index(node){\r\n        const list = dom.children(node.parentNode)\r\n        let i;\r\n        for(i=0;i<list.length;i++){\r\n            if(list[i] === node){\r\n                break;\r\n            }\r\n        }\r\n        return i\r\n    }\r\n}"]}